.TH "include/ccn/uri.h" 3 "Tue Apr 1 2014" "Version 0.8.2" "Content-Centric Networking in C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/ccn/uri.h \- 
.PP
ccn-scheme uri conversions\&.  

.SH SYNOPSIS
.br
.PP
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBCCN_URI_INCLUDESCHEME\fP   1"
.br
.ti -1c
.RI "#define \fBCCN_URI_MIXEDESCAPE\fP   2"
.br
.ti -1c
.RI "#define \fBCCN_URI_PERCENTESCAPE\fP   4"
.br
.ti -1c
.RI "#define \fBCCN_URI_ESCAPE_MASK\fP   (\fBCCN_URI_MIXEDESCAPE\fP|\fBCCN_URI_PERCENTESCAPE\fP)"
.br
.ti -1c
.RI "#define \fBCCN_URI_DEFAULT_ESCAPE\fP   \fBCCN_URI_MIXEDESCAPE\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBccn_uri_append_percentescaped\fP (struct \fBccn_charbuf\fP *c, const unsigned char *data, size_t size)"
.br
.RI "\fIThis appends to c a percent-escaped representation of the component passed in\&. \fP"
.ti -1c
.RI "void \fBccn_uri_append_mixedescaped\fP (struct \fBccn_charbuf\fP *c, const unsigned char *data, size_t size)"
.br
.ti -1c
.RI "int \fBccn_uri_append\fP (struct \fBccn_charbuf\fP *c, const unsigned char *ccnb, size_t size, int flags)"
.br
.RI "\fIThis appends to c a URI representation of the ccnb-encoded Name element passed in\&. \fP"
.ti -1c
.RI "int \fBccn_name_from_uri\fP (struct \fBccn_charbuf\fP *c, const char *uri)"
.br
.RI "\fIConvert a ccnx-scheme URI to a ccnb-encoded Name\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
ccn-scheme uri conversions\&. 

Part of the CCNx C Library\&.
.PP
Copyright (C) 2008, 2009, 2010, 2013 Palo Alto Research Center, Inc\&.
.PP
This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License version 2\&.1 as published by the Free Software Foundation\&. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\&. See the GNU Lesser General Public License for more details\&. You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc\&., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\&. 
.PP
Definition in file \fBuri\&.h\fP\&.
.SH "Define Documentation"
.PP 
.SS "#define \fBCCN_URI_DEFAULT_ESCAPE\fP   \fBCCN_URI_MIXEDESCAPE\fP"
.PP
Definition at line 44 of file uri\&.h\&.
.PP
Referenced by ccn_uri_append(), and ccnd_append_excludes()\&.
.SS "#define \fBCCN_URI_ESCAPE_MASK\fP   (\fBCCN_URI_MIXEDESCAPE\fP|\fBCCN_URI_PERCENTESCAPE\fP)"
.PP
Definition at line 42 of file uri\&.h\&.
.PP
Referenced by ccn_uri_append()\&.
.SS "#define \fBCCN_URI_INCLUDESCHEME\fP   1"
.PP
Definition at line 38 of file uri\&.h\&.
.PP
Referenced by ccn_uri_append(), and main()\&.
.SS "#define \fBCCN_URI_MIXEDESCAPE\fP   2"
.PP
Definition at line 39 of file uri\&.h\&.
.PP
Referenced by ccn_uri_append(), ccnd_append_excludes(), and main()\&.
.SS "#define \fBCCN_URI_PERCENTESCAPE\fP   4"
.PP
Definition at line 40 of file uri\&.h\&.
.PP
Referenced by ccn_uri_append(), and main()\&.
.SH "Function Documentation"
.PP 
.SS "int \fBccn_name_from_uri\fP (struct \fBccn_charbuf\fP *c, const char *uri)"
.PP
Convert a ccnx-scheme URI to a ccnb-encoded Name\&. The converted result is placed in c\&. On input, c may contain a base name, in which case relative URIs are allowed\&. Otherwise c should start out empty, and the URI must be absolute\&. 
.PP
\fBReturns:\fP
.RS 4
-1 if an error is found, otherwise returns the number of characters that were processed\&. 
.RE
.PP

.PP
Definition at line 321 of file ccn_uri\&.c\&.
.PP
Referenced by add_uri_exclusion(), append_adjacency_uri(), ccn_guest_prefix(), ccn_initiate_ccndid_fetch(), ccn_initiate_prefix_reg(), ccnd_adjacency_offer_or_commit_req(), ccnd_init_face_guid_cob(), ccnd_init_service_ccnb(), ccnd_parse_uri_list(), ccnd_reg_ccnx_ccndid(), ccnd_reg_uri(), ccnd_req_guest(), ccnd_start_notice(), ccnd_uri_listen(), ccndc_daemonize(), ccndc_get_ccnd_id(), ccnr_init_policy_cob(), ccnr_init_policy_link_cob(), ccnr_init_service_ccnb(), ccnr_uri_listen(), ccns_slice_name(), existingRootOp(), genTestRootRepos(), genTestRootRouting(), getFile(), initialize(), load_policy(), localStore(), main(), NewElem(), parse_ccn_forwarding_entry(), parse_ccn_strategy_selection(), parseAndAccumName(), putFile(), r_proto_append_repo_info(), r_proto_uri_listen(), send_adjacency_solicit(), sendSlice(), stuff_link_check(), SyncNewBase(), test_flatname(), testReadBuilder(), testRootLookup(), unit_tests_for_signing(), and write_slice()\&.
.SS "int \fBccn_uri_append\fP (struct \fBccn_charbuf\fP *c, const unsigned char *ccnb, size_tsize, intflags)"
.PP
This appends to c a URI representation of the ccnb-encoded Name element passed in\&. For convenience, it will also look inside of a ContentObject or Interest object to find the Name\&. Components that consist solely of zero or more dots are converted by adding 3 more dots so there are no ambiguities with \&. or \&.\&. or whether a component is empty or absent\&. Will prepend 'ccnx:' if flags & CCN_URI_INCLUDESCHEME is not 0 Will escape with '%' and '=' if flags & CCN_URI_MIXEDESCAPES is not 0 
.PP
Definition at line 141 of file ccn_uri\&.c\&.
.PP
Referenced by append_adjacency_uri(), ccn_uri_append_flatname(), ccnd_debug_ccnb(), ccnd_reg_ccnx_ccndid(), ccnd_req_guest(), ccnd_uri_listen(), ccndc_strategy(), ccnr_debug_ccnb(), ccnr_uri_listen(), collect_forwarding_html(), collect_forwarding_xml(), debug_logger(), incoming_content(), main(), printTreeInner(), process_data(), storeHandler(), sync_cb(), SyncRootLookupName(), SyncUriForName(), test_flatname(), and testReader()\&.
.SS "void \fBccn_uri_append_mixedescaped\fP (struct \fBccn_charbuf\fP *c, const unsigned char *data, size_tsize)"
.PP
Definition at line 86 of file ccn_uri\&.c\&.
.PP
Referenced by ccn_uri_append(), and ccnd_append_excludes()\&.
.SS "void \fBccn_uri_append_percentescaped\fP (struct \fBccn_charbuf\fP *c, const unsigned char *data, size_tsize)"
.PP
This appends to c a percent-escaped representation of the component passed in\&. Only generic URI unreserved characters are not escaped\&. Components that consist solely of zero or more dots are converted by adding 3 more dots so there are no ambiguities with \&. or \&.\&. or whether a component is empty or absent\&. (cf\&. ccn_uri_append) 
.PP
Definition at line 62 of file ccn_uri\&.c\&.
.PP
Referenced by append_interest_details(), ccn_uri_append(), ccnd_append_excludes(), and ccndc_srv()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Content-Centric Networking in C from the source code\&.
