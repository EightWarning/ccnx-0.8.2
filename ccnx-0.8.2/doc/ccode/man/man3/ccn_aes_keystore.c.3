.TH "lib/ccn_aes_keystore.c" 3 "Tue Apr 1 2014" "Version 0.8.2" "Content-Centric Networking in C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/ccn_aes_keystore.c \- 
.PP
Support for aes (symmetric) keystore access\&.  

.SH SYNOPSIS
.br
.PP
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBAES_KEYSTORE_VERSION\fP   1L"
.br
.ti -1c
.RI "#define \fBIV_SIZE\fP   16"
.br
.ti -1c
.RI "#define \fBAES_MAX_DIGEST_SIZE\fP   128"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "static unsigned char * \fBcreate_derived_key\fP (const char *key, unsigned int keylength, unsigned char *salt, unsigned int saltlen)"
.br
.ti -1c
.RI "static ssize_t \fBccn_aes_keystore_key_digest_length\fP (struct ccn_keystore *p)"
.br
.ti -1c
.RI "static const unsigned char * \fBccn_aes_keystore_key_digest\fP (struct ccn_keystore *p)"
.br
.ti -1c
.RI "static struct ccn_pkey * \fBget_key_from_aes_keystore\fP (struct ccn_keystore *ks)"
.br
.ti -1c
.RI "static const char * \fBccn_aes_keystore_digest_algorithm\fP (struct ccn_keystore *p)"
.br
.ti -1c
.RI "static void \fBccn_aes_keystore_destroy\fP (struct ccn_keystore **p)"
.br
.ti -1c
.RI "struct ccn_keystore * \fBccn_aes_keystore_create\fP (void)"
.br
.ti -1c
.RI "static int \fBccn_aes_digest\fP (unsigned char *key, unsigned int keylength, unsigned char *key_digest)"
.br
.ti -1c
.RI "int \fBccn_aes_keystore_init\fP (struct ccn_keystore *keystore, char *filename, const char *password)"
.br
.ti -1c
.RI "int \fBccn_aes_keystore_file_init\fP (char *filename, const char *password, unsigned char *key, int keylength)"
.br
.RI "\fICreate an AES keystore file\&. \fP"
.ti -1c
.RI "void \fBccn_generate_symmetric_key\fP (unsigned char *keybuf, int keylength)"
.br
.ti -1c
.RI "int \fBccn_create_aes_filename_from_key\fP (struct \fBccn_charbuf\fP *filename, unsigned char *key, int keylength)"
.br
.ti -1c
.RI "void \fBccn_create_filename_with_digest_suffix\fP (struct \fBccn_charbuf\fP *filename, const unsigned char *digest, int digest_len)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Support for aes (symmetric) keystore access\&. 

Part of the CCNx C Library\&.
.PP
Copyright (C) 2013 Palo Alto Research Center, Inc\&.
.PP
This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License version 2\&.1 as published by the Free Software Foundation\&. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\&. See the GNU Lesser General Public License for more details\&. You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc\&., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\&. 
.PP
Definition in file \fBccn_aes_keystore\&.c\fP\&.
.SH "Define Documentation"
.PP 
.SS "#define \fBAES_KEYSTORE_VERSION\fP   1L"
.PP
Definition at line 41 of file ccn_aes_keystore\&.c\&.
.PP
Referenced by ccn_aes_keystore_file_init(), and ccn_aes_keystore_init()\&.
.SS "#define \fBAES_MAX_DIGEST_SIZE\fP   128"
.PP
Definition at line 43 of file ccn_aes_keystore\&.c\&.
.SS "#define \fBIV_SIZE\fP   16"
.PP
Definition at line 42 of file ccn_aes_keystore\&.c\&.
.PP
Referenced by ccn_aes_keystore_file_init(), and ccn_aes_keystore_init()\&.
.SH "Function Documentation"
.PP 
.SS "static int \fBccn_aes_digest\fP (unsigned char *key, unsigned intkeylength, unsigned char *key_digest)\fC [static]\fP"
.PP
Definition at line 102 of file ccn_aes_keystore\&.c\&.
.PP
Referenced by ccn_aes_keystore_init(), and ccn_create_aes_filename_from_key()\&.
.SS "struct ccn_keystore* \fBccn_aes_keystore_create\fP (void)\fC [read]\fP"
.PP
Definition at line 90 of file ccn_aes_keystore\&.c\&.
.PP
Referenced by ccn_load_signing_key(), ccn_locate_key(), and main()\&.
.SS "static void \fBccn_aes_keystore_destroy\fP (struct ccn_keystore **p)\fC [static]\fP"
.PP
Definition at line 81 of file ccn_aes_keystore\&.c\&.
.PP
Referenced by ccn_aes_keystore_create()\&.
.SS "static const char* \fBccn_aes_keystore_digest_algorithm\fP (struct ccn_keystore *p)\fC [static]\fP"
.PP
Definition at line 75 of file ccn_aes_keystore\&.c\&.
.PP
Referenced by ccn_aes_keystore_create()\&.
.SS "int \fBccn_aes_keystore_file_init\fP (char *filename, const char *password, unsigned char *key, intkeylength)"
.PP
Create an AES keystore file\&. \fBParameters:\fP
.RS 4
\fIfilename\fP the name of the keystore file to be created\&. 
.br
\fIpassword\fP the import/export password for the keystore\&. 
.br
\fIkey\fP the key to encrypt in the keystore 
.RE
.PP
\fBReturns:\fP
.RS 4
0 on success, -1 on failure 
.RE
.PP

.PP
Definition at line 203 of file ccn_aes_keystore\&.c\&.
.PP
Referenced by main()\&.
.SS "int \fBccn_aes_keystore_init\fP (struct ccn_keystore *keystore, char *filename, const char *password)"
.PP
Definition at line 117 of file ccn_aes_keystore\&.c\&.
.PP
Referenced by ccn_load_signing_key(), ccn_locate_key(), and main()\&.
.SS "static const unsigned char* \fBccn_aes_keystore_key_digest\fP (struct ccn_keystore *p)\fC [static]\fP"
.PP
Definition at line 63 of file ccn_aes_keystore\&.c\&.
.PP
Referenced by ccn_aes_keystore_create()\&.
.SS "static ssize_t \fBccn_aes_keystore_key_digest_length\fP (struct ccn_keystore *p)\fC [static]\fP"
.PP
Definition at line 57 of file ccn_aes_keystore\&.c\&.
.PP
Referenced by ccn_aes_keystore_create()\&.
.SS "int \fBccn_create_aes_filename_from_key\fP (struct \fBccn_charbuf\fP *filename, unsigned char *key, intkeylength)"
.PP
Definition at line 293 of file ccn_aes_keystore\&.c\&.
.PP
Referenced by main()\&.
.SS "void \fBccn_create_filename_with_digest_suffix\fP (struct \fBccn_charbuf\fP *filename, const unsigned char *digest, intdigest_len)"
.PP
Definition at line 306 of file ccn_aes_keystore\&.c\&.
.PP
Referenced by ccn_create_aes_filename_from_key(), and ccn_locate_key()\&.
.SS "void \fBccn_generate_symmetric_key\fP (unsigned char *keybuf, intkeylength)"
.PP
Definition at line 283 of file ccn_aes_keystore\&.c\&.
.PP
Referenced by main()\&.
.SS "static unsigned char * \fBcreate_derived_key\fP (const char *key, unsigned intkeylength, unsigned char *salt, unsigned intsaltlen)\fC [static]\fP"
.PP
Definition at line 317 of file ccn_aes_keystore\&.c\&.
.PP
Referenced by ccn_aes_keystore_file_init(), and ccn_aes_keystore_init()\&.
.SS "static struct ccn_pkey* \fBget_key_from_aes_keystore\fP (struct ccn_keystore *ks)\fC [static, read]\fP"
.PP
Definition at line 69 of file ccn_aes_keystore\&.c\&.
.PP
Referenced by ccn_aes_keystore_create()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Content-Centric Networking in C from the source code\&.
